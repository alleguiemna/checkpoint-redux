{"version":3,"sources":["js/type/index.js","components/AddTask.js","js/action/taskAction.js","components/EditTask.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","js/reducer/taskReducer.js","js/reducer/index.js","js/store.js","index.js"],"names":["ADD_TASK","EDIT_TASK","COMPLETE_TASK","DELETE_TASK","AddTask","handleClickAll","handleClickDone","handleClickNotDone","useSelector","state","taskReducer","taskList","useState","text","setText","dispatch","useDispatch","className","type","onChange","e","target","value","onClick","newTask","id","Math","random","description","trim","isDone","payload","alert","EditTask","todo","editedTask","setEditedTask","show","setShow","handleClose","variant","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","TaskItem","style","textDecoration","TaskList","filter","el","map","App","setFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","devtool","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aefa99b6.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK'\r\nexport const EDIT_TASK = 'EDIT_TASK'\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK'\r\nexport const DELETE_TASK = 'DELETE_TASK'\r\nexport const FILTER_TASK = 'FILTER_TASK'","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTask } from \"../js/action/taskAction\";\r\n\r\nconst AddTask = ({handleClickAll,handleClickDone,handleClickNotDone }) => {\r\n  const taskList = useSelector((state) => state.taskReducer.taskList)\r\n  const [text, setText] = useState(\"\");\r\n \r\n  const dispatch = useDispatch();\r\n  const add = () => {\r\n    if (text) {\r\n      dispatch(\r\n        addTask({ id: Math.random(), description: text.trim(), isDone: false })\r\n      );\r\n      setText(\"\");\r\n    } else alert(\"enter your task\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"add\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          value={text}\r\n        />\r\n        <button onClick={add}>Add Task</button>\r\n      </div>\r\n      <div>\r\n        <button onClick={handleClickAll}>All</button>) \r\n        <button onClick={handleClickDone}>Done</button>)\r\n        <button onClick={handleClickNotDone}>Not Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import {ADD_TASK,EDIT_TASK,DELETE_TASK,COMPLETE_TASK} from '../type'\r\n\r\nexport const addTask = (newTask) => {\r\n    return ({\r\n        type:ADD_TASK,\r\n        payload:newTask\r\n    }  );\r\n}\r\n\r\n\r\nexport const completeTask = (payload) => ({\r\n    type: COMPLETE_TASK,\r\n    payload //payload:id\r\n})\r\n\r\n\r\nexport const deleteTask = (payload) => ({\r\n    type: DELETE_TASK,\r\n    payload//payload:id\r\n})\r\n\r\nexport const editTask = (id,value) => ({\r\n    type: EDIT_TASK,\r\n    payload:{id,value}\r\n})\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTask } from \"../js/action/taskAction\";\r\n\r\nconst EditTask = ({ todo }) => {\r\n  const [editedTask, setEditedTask] = useState(todo.description)\r\n  const [show, setShow] = useState(false);\r\n \r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const dispatch = useDispatch();\r\n  const edit = () => {\r\n    dispatch(editTask(todo.id,editedTask));\r\n    handleClose()\r\n  };\r\n\r\n  return (\r\n    < >\r\n     <button variant=\"primary\" onClick={handleShow}>\r\n        Edit\r\n      </button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input \r\n          type=\"text\" \r\n          className=\"form-control\"\r\n          onChange={(e) => setEditedTask(e.target.value)} \r\n          value={editedTask}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={edit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { completeTask, deleteTask } from \"../js/action/taskAction\";\r\nimport EditTask from \"./EditTask\";\r\n\r\nconst TaskItem = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <div className=\"task\" style={{ textDecoration: todo.isDone ? \"line-through\" : null }}>\r\n        {todo.description}\r\n      </div>\r\n      <div>\r\n        <button onClick={() => dispatch(completeTask(todo.id))}>\r\n          {todo.isDone ? \"Undo\": \"Complete\"}{\" \"}\r\n        </button>\r\n        <EditTask todo={todo} />\r\n        <button onClick={() => dispatch(deleteTask(todo.id))}>DELETE</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react'\r\n\r\nimport TaskItem from './TaskItem'\r\n\r\nconst TaskList = ({taskList ,filter}) => {\r\n  \r\n    return (\r\n        <div>\r\n           { \r\n                 filter === \"done\" ? taskList.filter(el=> el.isDone).map(todo=>   <TaskItem todo={todo} key={todo.id} />)\r\n                 : filter===\"notDone\" ? taskList.filter(el=> !el.isDone).map(todo=>   <TaskItem todo={todo} key={todo.id} />)\r\n                  : taskList.map(todo => <TaskItem todo={todo} key={todo.id} />    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport TaskList from \"./components/TaskList\";\r\n\r\nfunction App() {\r\n  const taskList = useSelector((state) => state.taskReducer.taskList);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const handleClickAll = (e) => {\r\n    setFilter(\"all\");\r\n  };\r\n  const handleClickDone = (e) => {\r\n    setFilter(\"done\");\r\n  };\r\n  const handleClickNotDone = (e) => {\r\n    setFilter(\"notDone\");\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo App</h1>\r\n      <AddTask\r\n        handleClickAll={handleClickAll}\r\n        handleClickDone={handleClickDone}\r\n        handleClickNotDone={handleClickNotDone}\r\n      />\r\n      <TaskList filter={filter} taskList={taskList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TASK, COMPLETE_TASK, DELETE_TASK, EDIT_TASK} from \"../type\";\r\n\r\nconst initialState = {\r\n  taskList: [\r\n    {\r\n      id: 0,\r\n      description: \"Learn HTML and CSS \",\r\n      isDone: true,\r\n    },\r\n    {\r\n      id: 1,\r\n      description: \"Learn ES6 \",\r\n      isDone: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      description: \"Learn node.js\",\r\n      isDone: false,\r\n    },\r\n  ],\r\n};\r\n\r\nconst taskReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return { ...state, taskList: [...state.taskList, payload] };\r\n    case COMPLETE_TASK:\r\n      return {\r\n        ...state,\r\n        taskList: state.taskList.map((todo) =>\r\n          todo.id === payload ? { ...todo, isDone: !todo.isDone } : todo\r\n        ),\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        taskList: state.taskList.filter((todo) => todo.id !== payload),\r\n      };\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        taskList: state.taskList.map((todo) =>\r\n          todo.id === payload.id ? { ...todo, description: payload.value } : todo\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n","import {combineReducers} from 'redux'\r\nimport taskReducer from './taskReducer'\r\n\r\nexport const rootReducer = combineReducers({taskReducer}) \r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst devtool =\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nexport const store = createStore(rootReducer,devtool)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport store from './js/store';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n   <App />\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}